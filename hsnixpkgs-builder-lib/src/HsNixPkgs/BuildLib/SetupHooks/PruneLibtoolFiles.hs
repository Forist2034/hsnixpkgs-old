module HsNixPkgs.BuildLib.SetupHooks.PruneLibtoolFiles (pruneLibtoolFiles) where

import Control.Monad
import Data.Foldable
import qualified Data.Text as T
import qualified Data.Text.IO as TIO
import HsNixPkgs.BuildLib.Util
import System.FilePath
import System.Posix.Files

-- | Clear dependency_libs in libtool files for shared libraries.
-- Shared libraries already encode their dependencies with locations.  .la
-- files do not always encode those locations, and sometimes encode the
-- locations in the wrong Nix output. .la files are not needed for shared
-- libraries, but without dependency_libs they do not hurt either
pruneLibtoolFiles :: FilePath -> IO ()
pruneLibtoolFiles p =
  listDirRec p
    >>= filterM (fmap isRegularFile . getFileStatus)
    >>= traverse_
      ( \f -> do
          cont <- T.lines <$> TIO.readFile f
          {- Libtool uses "dlname" and "library_names" fields for shared libraries and
          the "old_library" field for static libraries.  We are processing only
          those .la files that do not describe static libraries-}
          when
            ( any ("# Generated by .*libtool" `T.isPrefixOf`) cont
                && any ("old_library=''" `T.isPrefixOf`) cont
            )
            $ TIO.writeFile
              f
              ( T.unlines
                  ( fmap
                      ( \l ->
                          if "dependency_libs='" `T.isPrefixOf` l
                            then "dependency_libs='' #pruned"
                            else l
                      )
                      cont
                  )
              )
      )
      . filter (".la" `isExtensionOf`)
